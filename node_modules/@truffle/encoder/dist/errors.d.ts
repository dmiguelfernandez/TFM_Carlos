/**
 * @category Exception
 * @protected
 */
export declare class NoInternalInfoError extends Error {
    constructor();
}
/**
 * @category Exception
 * @protected
 */
export declare class NoCompilationsForSpawnerError extends Error {
    constructor();
}
/**
 * @category Exception
 * @protected
 */
export declare class NoFunctionByThatNameError extends Error {
    functionName: string;
    contractName: string | undefined;
    constructor(functionName: string, contractName: string);
}
/**
 * This error indicates that an invalid address was passed to one of the
 * contract instance encoder spawners ([[forContractInstance]], etc).  Valid
 * addresses are those that Web3 accepts; i.e., either those with correct
 * checksums, or those that are all-lowercase or all-uppercase to deliberately
 * circumvent the checksum.
 * @category Exception
 */
export declare class InvalidAddressError extends Error {
    address: string;
    constructor(address: string);
}
/**
 * This error indicates that you attempted to encode a contract creation
 * transaction for a contract that has not had all of its libraries linked.
 * @category Exception
 */
export declare class UnlinkedContractError extends Error {
    contractName: string | undefined;
    bytecode: string | undefined;
    constructor(contractName: string | undefined, bytecode: string | undefined);
}
/**
 * This error indicates that you attempted to use address autodetection
 * for a contract that isn't deployed to the current network.
 * @category Exception
 */
export declare class ContractNotDeployedError extends Error {
    contractName: string | undefined;
    networkId: number;
    constructor(contractName: string | undefined, networkId: number);
}
/**
 * This error indicates that you attempted to encode a contract creation
 * transaction for a contract that lacks constructor bytecode.
 * @category Exception
 */
export declare class NoBytecodeError extends Error {
    contractName: string | undefined;
    constructor(contractName: string | undefined);
}
/**
 * This error indicates that the user attempted to do something that
 * requires a network ID (e.g.: autodetect an address for a deployed
 * contract) when no network ID or provider was set.
 * @category Exception
 */
export declare class NoNetworkError extends Error {
    constructor();
}
/**
 * This error indicates that the contract you are attempting to create an
 * encoder for does not appear in the project info.
 * @category Exception
 */
export declare class ContractNotFoundError extends Error {
    contractName: string | undefined;
    bytecode: string | undefined;
    deployedBytecode: string | undefined;
    address: string | undefined;
    constructor(contractName: string | undefined, bytecode: string | undefined, deployedBytecode: string | undefined, address?: string);
}
